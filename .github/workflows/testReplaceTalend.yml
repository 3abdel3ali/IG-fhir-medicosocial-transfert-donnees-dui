name: Run JAR on new ZIP in NOS

on:
  push:
    branches:
      - main
    paths:
      - "nos/*.json"
  pull_request:
    branches:
      - main
    paths:
      - "nos/*.json"

jobs:
  run-jar:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Récupération du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Installation de Java
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3️⃣ Debug : afficher la structure du dépôt et s'assurer que le fichier de config existe
      - name: Debug - vérifier les fichiers et chemins
        run: |
          echo "Répertoire courant : $(pwd)"
          echo "Contenu de la racine :"
          ls -la
          echo "Contenu du dossier JAR :"
          ls -la JAR || true
          echo "Git index pour JAR/configuration.properties :"
          git ls-files -- JAR/configuration.properties || true

      # 4️⃣ Exécution du JAR depuis son propre répertoire
      - name: Exécuter le JAR depuis son répertoire
        working-directory: JAR
        run: |
          echo "Répertoire courant : $(pwd)"
          echo "Contenu du dossier JAR :"
          ls -la

        # Vérifier la présence du fichier de configuration
          if [ ! -f configuration.properties ]; then
            echo "❌ Fichier configuration.properties introuvable dans $(pwd)"
            exit 1
          fi

        # Créer le répertoire log (à la racine du dépôt)
            mkdir -p ../log

        # Horodatage pour le fichier de log
             TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
             LOG_FILE="../log/execution_${TIMESTAMP}.log"

            echo "📝 Le log sera enregistré sous : $LOG_FILE"

        # Exécuter le JAR (le plus récent dans JAR/)
           JAR_FILE=$(ls -t *.jar | head -n1)
           echo "🔧 Exécution de $JAR_FILE"
        #java -jar "$JAR_FILE" 2>&1 | tee ../log/execution.log
          java -jar "$JAR_FILE" > "$LOG_FILE" 2>&1

        # echo "🔍 Recherche du fichier de log généré par le JAR..."
          # Trouver les fichiers .log générés pendant le run
          # find /home/runner -type f -name "*.log" 2>/dev/null | tee ../log/logs_found.txt

          # echo "📂 Déplacement des logs trouvés vers le dossier log/"
          # while IFS= read -r f; do
          # echo "Déplacement de $f vers ../log/"
          # cp "$f" ../log/ || true
          # done < ../log/logs_found.txt

          # echo "✅ Logs déplacés dans le dossier log/"
          # ls -lh ../log
         
         # Vérifier si le log a été généré
           if [ -f "$LOG_FILE" ]; then
            echo "✅ Log généré : $LOG_FILE"
           else
             echo "⚠️ Aucun log trouvé après l'exécution du JAR"
          fi

    echo "📂 Contenu du dossier log :"
    ls -lh ../log

      # 5️⃣ Sauvegarde des logs comme artefacts
      - name: Sauvegarder les logs générés
        uses: actions/upload-artifact@v4
        with:
          name: jar-logs
          path: log/
